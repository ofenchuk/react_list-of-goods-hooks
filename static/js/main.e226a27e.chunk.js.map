{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","displayGoods","goods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","activeReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAaMC,EAxCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAkBzB,OAhBIH,IAAaP,EAASW,UACxBF,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAIxBP,IAAaP,EAASgB,QACxBP,EAAaG,MACX,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,UAIzDb,GACFK,EAAaS,UAGRT,EAkBcU,CAAkBlB,EAAiB,CACtDM,WACAH,eAGIgB,EAAchB,GAAcG,IAAaP,EAASM,KAExD,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYhB,IAAaP,EAASW,WAEpCa,QA1BmB,kBAAMhB,EAAYR,EAASW,WAqBhD,iCAUA,wBACEW,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYhB,IAAaP,EAASgB,SAEpCQ,QAlCiB,kBAAMhB,EAAYR,EAASgB,SA6B9C,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAanB,IAEfoB,QA1Cc,kBAAMnB,GAAaD,IAqCnC,qBAUCgB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAjDU,WAClBnB,GAAY,GACZG,EAAYR,EAASM,OA4Cf,sBAUJ,6BACE,6BACGG,EAAagB,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCxHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e226a27e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const displayGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    displayGoods.sort((firstGood, secondGood) => (\n      firstGood.localeCompare(secondGood)\n    ));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    displayGoods.sort(\n      (firstGood, secondGood) => firstGood.length - secondGood.length,\n    );\n  }\n\n  if (isReversed) {\n    displayGoods.reverse();\n  }\n\n  return displayGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleAlphabetSort = () => setSortType(SortType.ALPHABET);\n\n  const handleLengthSort = () => setSortType(SortType.LENGTH);\n\n  const handleReverse = () => setReversed(!isReversed);\n\n  const handleReset = () => {\n    setReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const displayGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const activeReset = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={handleAlphabetSort}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={handleLengthSort}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {activeReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {displayGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}